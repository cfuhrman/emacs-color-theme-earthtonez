(deftheme earth-tonez
  "Created 2013-06-18.")

(custom-theme-set-faces
 'earth-tonez
 '(default ((t (:family "DejaVu Sans Mono" :foundry "unknown" :width normal :height 113 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "white" :background "grey15" :stipple nil :inherit nil))))
 '(cursor ((t (:background "red"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((t (:family "helv" :height 140))))
 '(escape-glyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((((background dark)) (:weight bold :foreground "cadetblue"))))
 '(highlight ((((class color) (min-colors 88) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 88) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 16) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 16) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 8)) (:foreground "black" :background "green")) (t (:inverse-video t))))
 '(region ((((class color) (min-colors 88) (background dark)) (:background "darkolivegreen"))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) (((class color) (min-colors 8) (background light)) (:foreground "green")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(secondary-selection ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "SkyBlue4")) (((class color) (min-colors 16) (background light)) (:background "yellow")) (((class color) (min-colors 16) (background dark)) (:background "SkyBlue4")) (((class color) (min-colors 8)) (:foreground "black" :background "cyan")) (t (:inverse-video t))))
 '(trailing-whitespace ((((class color) (background light)) (:background "red1")) (((class color) (background dark)) (:background "red1")) (t (:inverse-video t))))
 '(font-lock-builtin-face ((((class grayscale) (background light)) (:weight bold :foreground "LightGray")) (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) (((class color) (min-colors 88) (background light)) (:foreground "dark slate blue")) (((class color) (min-colors 88) (background dark)) (:foreground "LightSteelBlue")) (((class color) (min-colors 16) (background light)) (:foreground "Orchid")) (((class color) (min-colors 16) (background dark)) (:foreground "LightSteelBlue")) (((class color) (min-colors 8)) (:weight bold :foreground "blue")) (t (:weight bold))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((((class color) (min-colors 88) (background dark)) (:slant italic :foreground "lightblue"))))
 '(font-lock-constant-face ((t (:weight bold :slant italic :foreground "lightsteelblue3"))))
 '(font-lock-doc-face ((t (:slant italic :foreground "gray"))))
 '(font-lock-function-name-face ((((class color) (min-colors 88) (background dark)) (:weight bold :foreground "lightyellow"))))
 '(font-lock-keyword-face ((((class color) (min-colors 88) (background dark)) (:weight bold :foreground "darkseagreen"))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((((class color) (min-colors 88) (background dark)) (:foreground "wheat3"))))
 '(font-lock-type-face ((t (:weight bold :foreground "cadetblue"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 88) (background dark)) (:foreground "lightyellow"))))
 '(font-lock-warning-face ((t (:inherit (error)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "lightskyblue"))))
 '(link-visited ((default (:inherit (link))) (((class color) (background dark)) (:foreground "cadetblue"))))
 '(fringe ((t (:background "#1D2021"))))
 '(header-line ((t (:weight bold :box (:line-width 1 :color "grey75" :style released-button) :foreground "lightyellow" :background "skyblue4"))))
 '(tooltip ((((class color)) (:family "fixed" :height 1.0 :weight bold :box (:line-width 2 :color "grey75" :style released-button) :foreground "black" :background "lightyellow" :inherit (variable-pitch)))))
 '(mode-line ((((class color) (min-colors 88)) (:box (:line-width -1 :color nil :style released-button) :foreground "ghostwhite" :background "grey25"))))
 '(mode-line-buffer-id ((t (:weight bold :foreground "lightgreen"))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:weight normal :box (:line-width 2 :color "grey40" :style released-button) :foreground "lightgreen"))))
 '(mode-line-inactive ((t (:weight light :box (:line-width -1 :color "grey40" :style nil) :foreground "gray50" :background "gray20" :inherit (mode-line)))))
 '(isearch ((((class color) (min-colors 88) (background light)) (:foreground "lightskyblue1" :background "magenta3")) (((class color) (min-colors 88) (background dark)) (:foreground "brown4" :background "palevioletred2")) (((class color) (min-colors 16)) (:foreground "cyan1" :background "magenta4")) (((class color) (min-colors 8)) (:foreground "cyan1" :background "magenta4")) (t (:inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 88) (background light)) (:background "RosyBrown1")) (((class color) (min-colors 88) (background dark)) (:background "red4")) (((class color) (min-colors 16)) (:background "red")) (((class color) (min-colors 8)) (:background "red")) (((class color grayscale)) (:foreground "grey")) (t (:inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background "paleturquoise")) (((class color) (min-colors 88) (background dark)) (:background "paleturquoise4")) (((class color) (min-colors 16)) (:background "turquoise3")) (((class color) (min-colors 8)) (:background "turquoise3")) (t (:underline (:color foreground-color :style line)))))
 '(match ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "RoyalBlue3")) (((class color) (min-colors 8) (background light)) (:foreground "black" :background "yellow")) (((class color) (min-colors 8) (background dark)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(bold ((t (:weight bold :foreground "lightgreen"))))
 '(bold-italic ((t (:weight bold :slant italic :foreground "lightblue"))))
 '(cperl-array-face ((((class color) (background dark)) (:weight bold :foreground "lightyellow" :background "gray30"))))
 '(cperl-hash-face ((((class color) (background dark)) (:weight bold :slant italic :foreground "indianred" :background "gray25"))))
 '(cperl-nonoverridable-face ((((class color) (background dark)) (:foreground "darkseagreen4"))))
 '(custom-comment-tag ((((class color) (background dark)) (:slant italic :foreground "lightblue"))))
 '(custom-state ((((class color) (background dark)) (:foreground "darkseagreen"))))
 '(custom-variable-tag ((((class color) (background dark)) (:height 1.2 :weight bold :foreground "lightyellow" :inherit (variable-pitch)))))
 '(diff-added ((t (:foreground "lightgreen" :inherit (diff-changed)))))
 '(diff-changed ((nil (:foreground "lightblue"))))
 '(diff-file-header ((t (:weight bold :slant italic :foreground "mediumpurple"))))
 '(diff-header ((((class color) (min-colors 88) (background dark)) (:weight bold :foreground "white"))))
 '(diff-hunk-header ((t (:weight bold :foreground "lightblue" :inherit (diff-header)))))
 '(diff-index ((t (:weight bold :foreground "white" :background "mediumpurple"))))
 '(diff-refine-change ((((class color) (min-colors 88) (background dark)) (:background "grey30"))))
 '(diff-removed ((t (:foreground "indianred" :inherit (diff-changed)))))
 '(dired-directory ((t (:weight bold :foreground "lightblue" :inherit (font-lock-function-name-face)))))
 '(dired-header ((t (:weight bold :foreground "lightyellow" :inherit (font-lock-type-face)))))
 '(dired-symlink ((t (:foreground "lightsteelblue" :inherit (font-lock-keyword-face)))))
 '(ediff-current-diff-A ((((class color) (min-colors 16)) (:foreground "red" :background "grey10"))))
 '(ediff-current-diff-B ((((class color) (min-colors 16)) (:foreground "lightgreen" :background "grey10"))))
 '(ediff-even-diff-A ((t (:foreground "red" :background "grey18"))))
 '(ediff-even-diff-B ((t (:foreground "lightgreen" :background "grey18"))))
 '(ediff-even-diff-C ((t (:foreground "lightblue" :background "grey18"))))
 '(ediff-odd-diff-A ((t (:foreground "red" :background "grey22"))))
 '(ediff-odd-diff-B ((t (:foreground "lightgreen" :background "grey22"))))
 '(ediff-odd-diff-C ((t (:foreground "lightblue" :background "grey22"))))
 '(italic ((((supports :slant italic)) (:slant italic :foreground "gray"))))
 '(linum ((t (:foreground "darkseagreen4" :background "#1D2021" :inherit (shadow default)))))
 '(log-view-file ((t (:weight bold :box (:line-width 1 :color "grey75" :style released-button) :foreground "white" :background "purple"))))
 '(log-view-message ((t (:weight bold :slant italic :foreground "darkseagreen"))))
 '(menu ((t (:weight bold :foreground "white" :background "grey20"))))
 '(mouse ((t (:foreground "white" :background "red"))))
 '(org-tag ((t (:weight bold :foreground "indianred3" :background "grey25"))))
 '(rpm-spec-dir-face ((((class color) (background dark)) (:foreground "cadetblue1"))))
 '(rpm-spec-ghost-face ((((class color) (background dark)) (:foreground "indianred3"))))
 '(rpm-spec-macro-face ((((class color) (background dark)) (:foreground "darkseagreen"))))
 '(rpm-spec-package-face ((((class color) (background dark)) (:foreground "indianred1"))))
 '(rpm-spec-tag-face ((((class color) (background dark)) (:weight bold :foreground "lightgreen"))))
 '(rpm-spec-var-face ((((class color) (background dark)) (:foreground "wheat3"))))
 '(smerge-refined-change ((t (:weight bold :foreground "yellow" :background "darkblue"))))
 '(table-cell ((t (:inverse-video nil :foreground "yellow" :background "darkblue"))))
 '(change-log-name ((t (:foreground "darkseagreen" :slant italic :weight bold))))
 '(which-func ((((class color) (min-colors 88) (background dark)) (:weight bold :foreground "lightyellow")))))

(provide-theme 'earth-tonez)
